diff --git a/code/handmade_debug.cpp b/code/handmade_debug.cpp
index 3bfcf58..2c6d23d 100644
--- a/code/handmade_debug.cpp
+++ b/code/handmade_debug.cpp
@@ -250,7 +250,7 @@ DEBUGOverlay(game_memory *Memory)
 
 #if 1
                     char TextBuffer[256];
-                    _snprintf_s(TextBuffer, sizeof(TextBuffer),
+                    snprintf(TextBuffer, sizeof(TextBuffer),
                                 "%32s(%4d): %10ucy %8uh %10ucy/h",
                                 Counter->FunctionName,
                                 Counter->LineNumber,
diff --git a/code/handmade_platform.h b/code/handmade_platform.h
index d55a5bc..d6c50d3 100644
--- a/code/handmade_platform.h
+++ b/code/handmade_platform.h
@@ -398,6 +398,32 @@ inline uint32 AtomicCompareExchangeUInt32(uint32 volatile *Value, uint32 New, ui
 
     return(Result);
 }
+inline u64 AtomicExchangeU64(u64 volatile *Value, u64 New)
+{
+    u64 Result = __sync_lock_test_and_set((u64 *)Value, New);
+
+    return(Result);
+}
+inline u64 AtomicAddU64(u64 volatile *Value, u64 Addend)
+{
+    // NOTE(casey): Returns the original value _prior_ to adding
+    u64 Result = __sync_fetch_and_add((u64 *)Value, Addend);
+
+    return(Result);
+}
+inline u32 GetThreadID(void)
+{
+	u32 ThreadID;
+#if defined(__i386__)
+    asm("movl %%gs:0x08,%0" : "=r"(ThreadID));
+#elif defined(__x86_64__)
+    asm("mov %%fs:0x10,%0" : "=r"(ThreadID));
+#else
+#error Unsupported architecture
+#endif
+    return ThreadID;
+}
+
 #else
 // TODO(casey): Other compilers/platforms??
 #endif
@@ -480,9 +506,9 @@ RecordDebugEvent(int RecordIndex, debug_event_type EventType)
     Event->Type = (u8)EventType;
 }
 
-#define TIMED_BLOCK__(Number, ...) timed_block TimedBlock_##Number(__COUNTER__, __FILE__, __LINE__, __FUNCTION__, ## __VA_ARGS__)
+#define TIMED_BLOCK__(Number, ...) timed_block TimedBlock_##Number(__COUNTER__, (char *)__FILE__, __LINE__, (char *)__FUNCTION__, ## __VA_ARGS__)
 #define TIMED_BLOCK_(Number, ...) TIMED_BLOCK__(Number, ## __VA_ARGS__)
-#define TIMED_BLOCK(...) TIMED_BLOCK_(__LINE__, ## __VA_ARGS__)
+#define TIMED_BLOCK(...) TIMED_BLOCK_(__LINE__) //, ## __VA_ARGS__)
 struct timed_block
 {
     int Counter;
